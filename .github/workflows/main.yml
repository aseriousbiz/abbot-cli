name: Build Abbot CLI

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: false
        default: ''
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  APP_SOLUTION: Abbot.CommandLine.sln
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout branch
      uses: actions/checkout@v2
    
    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.301

    - name: Restore NuGet Packages
      run: dotnet restore ${{ env.APP_SOLUTION }} --locked-mode

    - name: Build Solution
      run: dotnet build ${{ env.APP_SOLUTION }} --configuration Release --no-restore --nologo

    - name: Run Tests
      run: dotnet test ${{ env.APP_SOLUTION }} --configuration Release --no-build --nologo

    - name: Build for Publishing
      run: script/build -r
      if: github.event_name != 'pull_request'

    - name: Upload Win
      uses: actions/upload-artifact@v2
      with:
        name: 'win'
        path: publish/win
      if: github.event_name != 'pull_request'

    - name: Upload Linux
      uses: actions/upload-artifact@v2
      with:
        name: 'linux'
        path: publish/linux
      if: github.event_name != 'pull_request'

    - name: Upload Mac
      uses: actions/upload-artifact@v2
      with:
        name: 'osx'
        path: publish/osx
      if: github.event_name != 'pull_request'

    - name: Parse inputs
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: actions-ecosystem/action-regex-match@v2
      id: parse_input
      with:
        text: ${{ github.event.inputs.tag }}
        regex: '^[\w\.-]+$'

    - name: Create release
      uses: marvinpinto/action-automatic-releases@latest
      if: ${{ github.event_name == 'workflow_dispatch' && steps.parse_input.outputs.match != '' }}
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: ${{ steps.parse_input.outputs.match }}
        prerelease: true
        draft: true
        title: Release ${{ steps.parse_input.outputs.match }}
        files: |
          publish/win
          publish/osx
          publix/linux